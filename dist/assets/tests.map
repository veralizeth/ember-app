{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-quickstart/tests/acceptance/ember-app-test.js","ember-quickstart/tests/helpers/index.js","ember-quickstart/tests/integration/components/jumbo-test.js","ember-quickstart/tests/integration/components/rental-test.js","ember-quickstart/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-quickstart/tests/acceptance/ember-app-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-quickstart/tests/helpers\"], function (_qunit, _testHelpers, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"ember-quickstart/tests/helpers\"eaimeta@70e063a35619d71f\n  // This is a framework Qunit.\n  (0, _qunit.module)('Acceptance | ember app', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n\n    // This async because the page is going to take some time to reload.\n    (0, _qunit.test)('visiting /', async function (assert) {\n      // Almost always use await and visit as a pair.\n      await (0, _testHelpers.visit)('/');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('Welcome to Super Rentals!');\n\n      // Using here classes to asset the behaviour\n      assert.dom('.jumbo a.button').hasText('About Us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('visiting /about', async function (assert) {\n      await (0, _testHelpers.visit)('/about');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('About Super Rentals!');\n      assert.dom('.jumbo a.button').hasText('Contact Us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n    });\n    (0, _qunit.test)('visiting /getting-in-touch', async function (assert) {\n      await (0, _testHelpers.visit)('/getting-in-touch');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('.jumbo a.button').hasText('About Us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('navigating using the nav-bar', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('nav').exists();\n      assert.dom('nav a.menu-index').hasText('SuperRentals');\n      assert.dom('nav a.menu-about').hasText('About');\n      assert.dom('nav a.menu-contact').hasText('Contact');\n      await (0, _testHelpers.click)('nav a.menu-about');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n      await (0, _testHelpers.click)('nav a.menu-contact');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n      await (0, _testHelpers.click)('nav a.menu-index');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/');\n    });\n  });\n});","define(\"ember-quickstart/tests/helpers/index\", [\"exports\", \"ember-qunit\"], function (_exports, _emberQunit) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.setupApplicationTest = setupApplicationTest;\n  _exports.setupRenderingTest = setupRenderingTest;\n  _exports.setupTest = setupTest;\n  0; //eaimeta@70e063a35619d71f0,\"ember-qunit\"eaimeta@70e063a35619d71f\n  // This file exists to provide wrappers around ember-qunit's\n  // test setup functions. This way, you can easily extend the setup that is\n  // needed per test type.\n\n  function setupApplicationTest(hooks, options) {\n    (0, _emberQunit.setupApplicationTest)(hooks, options);\n\n    // Additional setup for application tests can be done here.\n    //\n    // For example, if you need an authenticated session for each\n    // application test, you could do:\n    //\n    // hooks.beforeEach(async function () {\n    //   await authenticateSession(); // ember-simple-auth\n    // });\n    //\n    // This is also a good place to call test setup functions coming\n    // from other addons:\n    //\n    // setupIntl(hooks); // ember-intl\n    // setupMirage(hooks); // ember-cli-mirage\n  }\n  function setupRenderingTest(hooks, options) {\n    (0, _emberQunit.setupRenderingTest)(hooks, options);\n\n    // Additional setup for rendering tests can be done here.\n  }\n  function setupTest(hooks, options) {\n    (0, _emberQunit.setupTest)(hooks, options);\n\n    // Additional setup for unit tests can be done here.\n  }\n});","define(\"ember-quickstart/tests/integration/components/jumbo-test\", [\"qunit\", \"ember-quickstart/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-quickstart/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  // Testing componet isolation.\n  (0, _qunit.module)('Integration | Component | jumbo', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the content inside a jumbo header with tomster', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Jumbo>Hello World</Jumbo>\n      */\n      {\n        \"id\": \"CVdnNizx\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Hello World\\\"]],[]]]]]],[],false,[\\\"jumbo\\\"]]\",\n        \"moduleName\": \"/Users/lizethvera/Code/ember-app/ember-quickstart/tests/integration/components/jumbo-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo').hasText('Hello World');\n      assert.dom('.jumbo .tomster').exists();\n    });\n  });\n});","define(\"ember-quickstart/tests/integration/components/rental-test\", [\"qunit\", \"ember-quickstart/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-quickstart/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | rental', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a rental property', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental />\n      */\n      {\n        \"id\": \"4Q42oS4v\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"rental\\\"]]\",\n        \"moduleName\": \"/Users/lizethvera/Code/ember-app/ember-quickstart/tests/integration/components/rental-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').hasText('Grand Old Mansion');\n      assert.dom('article .detail.owner').includesText('Veruca Salt');\n      assert.dom('article .detail.type').includesText('Standalone');\n      assert.dom('article .detail.location').includesText('San Fransisco');\n      assert.dom('article .detail.bedrooms').includesText('15');\n    });\n  });\n});","define(\"ember-quickstart/tests/test-helper\", [\"ember-quickstart/app\", \"ember-quickstart/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-quickstart/app\",0,\"ember-quickstart/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define('ember-quickstart/config/environment', [], function() {\n  var prefix = 'ember-quickstart';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-quickstart/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}